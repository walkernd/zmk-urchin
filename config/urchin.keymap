/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_italian.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo 0>;
        };

        // internal-left & external-right thumb keys

        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo 0>;
        };

        // both left thumb keys

        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo 0>;
        };

        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow

        combo_ctrl_space {
            timeout-ms = <200>;
            key-positions = <12 13>;
            bindings = <&kp LC(SPACE)>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            label = "Base";
            bindings = <
&kp Q    &kp W    &kp F    &kp P    &kp G               &kp Y        &kp U    &kp I        &kp O      &kp P
&kp A    &kp R    &kp S    &kp T    &kp D               &kp H        &kp N    &kp E        &kp I      &kp O
&kp Z    &kp X    &kp C    &kp V    &kp B               &kp K        &kp M    &kp COMMA    &kp DOT    &kp SLASH
                           &mo 2    &qt LSHIFT SPACE    &kp SPACE    &sl 1
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            label = "Sym.";
            bindings = <
&kp N1          &kp N2         &kp N3         &kp N4         &kp N5         &kp N6        &kp N7         &kp N8          &kp N9          &kp N0
&kp IT_LESS     &kp IT_USD     &kp IT_LPAR    &kp IT_LBRC    &kp IT_LBKT    &kp IT_EQL    &kp IT_QUES    &kp IT_SQUOT    &kp IT_MINUS    &kp IT_AST
&kp IT_GREAT    &kp IT_PERC    &kp IT_RPAR    &kp IT_RBRC    &kp IT_RBKT    &kp IT_AT     &kp IT_EXCL    &kp IT_DQUOT    &kp IT_PLUS     &kp IT_FSLH
                                              &mo 0          &mo 0          &trans        &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            label = "Mods";
            bindings = <
&kp ESC      &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_PAUSE    &kp PG_UP       &kp HOME    &kp UP      &kp END      &kp CAPS
&sk LALT     &sk LGUI      &sk LSHIFT    &sk LCTRL     &kp RALT       &kp PG_DN       &kp LEFT    &kp DOWN    &kp RIGHT    &kp DEL
&kp LC(Z)    &kp LC(X)     &kp LC(C)     &kp TAB       &kp LC(V)      &kp LC(BSPC)    &kp BSPC    &trans      &trans       &trans
                                         &trans        &kp LCTRL      &kp ENTER       &mo 0
            >;
        };

        // Function keys with modifiers
        // Low frequency symbols.
        // Used to type regional accents.
        // Used to change the keyboard's settings.
    };
};
